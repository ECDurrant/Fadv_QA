<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1344, 17</value>
  </metadata>
  <data name="Label12.ToolTip" xml:space="preserve">
    <value>o If there are multiple questions / issues, all of the customer’s concerns must be addressed

o If necessary, a summary of follow-up items must be reviewed if follow-up is expected:

*

* Summarize the specific candidate(s).

* What specific information is being requested (eta)?

* When can the client expect to receive a follow-up?

o The agent is expected to ask the client, when applicable, if there are any other issues that they can assist with. Verbiage must be included at the end of the email to offer additional assistance “Please contact us with any additional questions….”</value>
  </data>
  <data name="Label11.ToolTip" xml:space="preserve">
    <value>Did the agent give a detailed resolution to client?

Did agent provide summary of next steps to be followed?

*

o Agent reviews and verifies the information provided to the customer and future actions required by either the agent or customer.

 This ensures understanding and accuracy between the customer and the agent. It also instills confidence that the agent will resolve the issue and follow up with the customer. 

If issue is not resolved (ETA not provided, answer not provided to client, etc.) we must follow up with the client until issue has been resolved.</value>
  </data>
  <data name="Label10.ToolTip" xml:space="preserve">
    <value>o Respond to contact with follow up details noting Siebel with each step completed

o EX. If eta has changed the agent will send an email to contact with updated information of those changes and include a note in the Notes tab of the Service Request.</value>
  </data>
  <metadata name="SpellChecker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1022, 17</value>
  </metadata>
  <metadata name="SpellChecker2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>375, 17</value>
  </metadata>
  <data name="Label14.ToolTip" xml:space="preserve">
    <value>Did agent call/email client with detailed follow up or resolution within the timeline promised?

*

o Agent should complete follow up then reach out to client with result of research within the timeline promised to customer.

o Example- Expired ETA

o

* Agent emails CRRG with county, state, sub-order and applicant’s name

* CRRG updates WinESP with updated ETA or close case.

* Agent monitors WinESP for updates

* After system is updated agent contacts client with results</value>
  </data>
  <data name="Label1.ToolTip" xml:space="preserve">
    <value>o If the email is an Online Submission (Online Support message)

* The client’s email address, telephone number, account number and requester ID is listed on the inquiry.

* This information can be used to confirm the user rights of the client.

o There are instances when the client will email outside of the online system. Always look to see if the email has the client’s signature. The signature will usually include the email address, telephone number and fax number.

* If the email address matches the email address in our internal tools (EA Admin, CustX, CP Screen), the email address will count as one of the three pieces of required information.

* You must obtain two more bits of information (phone, fax, address, user ID).

o This information found in the client’s email can be used to confirm the user rights of the client.

o If the email doesn’t have 3 items that can be verified, you must reach out to the client for more information (account number, telephone number) to go along with the email address.

o If any of the client’s information is missing under the Contact tab, it should be entered.</value>
  </data>
  <data name="Label3.ToolTip" xml:space="preserve">
    <value>Did the agent follow the standard guidelines below?

o At the end of each email, the agent must thank the customer and brand the company. 

This shows our appreciation for the customer’s business and leaves them with the company brand firmly in their mind. 

When branding with our company name, is “First Advantage” can be either mentioned in the closing statement, or be placed in the in the email signature.

o “Thank you for choosing First Advantage. Have a great day” - is an example of a correct closing

o “Have a good one!” is an example of an incorrect closing

o “Thank you for contacting First Advantage.”

(The dedicated teams must have appropriate dedicated team email address in closing sentence)

(First Advantage, Customer Care) for signature line

Ex. Agent Name

SR#

First Advantage, Customer Care</value>
  </data>
  <metadata name="MenuStrip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>503, 17</value>
  </metadata>
  <data name="Label21.ToolTip" xml:space="preserve">
    <value>o The category/subcategory should reflect the issue of the email. Reports are queried using this information. Using the correct options in this section increases the accuracy of our reporting.

o The General Questions option should be used only if there is not a category/subcategory that fits the issue or if it is truly a General Question. 

o There is a list of Categories/Subcategories available. See the Siebel Category Definitions job aid. Please review with your supervisor if you have any questions.</value>
  </data>
  <data name="Label20.ToolTip" xml:space="preserve">
    <value>o When selecting a contact in the system (if there are multiple ones), select the contact that has the most correct information (account number, email address, telephone number). 

You may then add any information to this contact that is missing (that you have obtained). This will eliminate creating duplicate contacts in Siebel. 

Please review with your supervisor the different ways to search for contacts in Siebel.

o If the contact is the applicant

* The proper applicant generic contact must be used

* The applicant name, phone number and email address must be included in the main Service Request section

* The Applicant Call box in the More Info tab must be checked

* Note: Service Requests must never be closed under First Name-CHANGE_ME Last Name-CHANGE_ME

* Effective Monday June 27, 2016, if the Siebel SR is closed with the Contact Name: First Name-CHANGE_ME and Last Name-CHANGE_ME, this will result in an automatic score of zero on the QA Scorecard for that email</value>
  </data>
  <data name="Label24.ToolTip" xml:space="preserve">
    <value>o Follow up can be for other things, not only ETAs. If the agent tells the customer that they will follow up with them till completion of order, the follow up date section must be updated to match whatever was promised to customer.

o If issue is not resolved (ETA not provided, answer not provided to client, etc.) the SR must remain open with the follow-up date populated and we must follow up with the client until issue has been resolved.</value>
  </data>
  <data name="Label17.ToolTip" xml:space="preserve">
    <value>o No further action is needed to resolve the customer’s issue.

o If issue is not resolved (ETA not provided, answer not provided to client, etc.) the SR must remain open with the follow-up date populated and we must follow up with the client until issue has been resolved.</value>
  </data>
  <data name="Label16.ToolTip" xml:space="preserve">
    <value>o SR Information

o Account Information

o Applicant name, email address and phone number

o Summary

o Detailed Description

o Client ID

o Country name if Global

o Order ID/Specimen ID/Applicant Call Box – More Info Tab (if there are multiple CID / Specimen IDs, separate each with a comma in this field)

o Background Check Country and Platform - More Info Tab

o Authenticated Caller Tab

o Notes Tab (when applicable)</value>
  </data>
  <data name="Label15.ToolTip" xml:space="preserve">
    <value>o There should be a summary line for every Service Request. By default, the summary field populates the subject of the email. This does not need to be changed. However, if the Summary field is blank, information must be added to reflect the reason for the email.

o The Service Request must reflect the steps taken for resolution and should accurately reflect the issue that the client is experiencing. 

The Service Request should be clear and understandable to anyone who reads it. All applicant information should be entered for research purposes. 

The detailed description is the body of the email. If the email response does not accurately show what was done, notes must be added to the Notes tab of the Service Request.

 Notes are not required unless unusual actions were taken (escalation to Level 2, etc.). If unusual action is taken, this must be documented in the Notes tab.</value>
  </data>
  <data name="Label23.ToolTip" xml:space="preserve">
    <value>o The ability to project understanding of urgency and seriousness of all customers concerns. 

We want to show that their request and concerns are as important to us as they are to them.

o Examples of empathy:

* I can certainly help you…

* I assure you I will try my best…

* I’m sorry for the inconvenience that you have faced. What I can do for you is…

* Positive words-definitely, surely, absolutely, certainly and fantastic</value>
  </data>
  <data name="Label22.ToolTip" xml:space="preserve">
    <value>o Agent should remain professional, respectful, sincere and energetic when emailing the customer.

o Put yourself in your customer’s shoes. The agent should ask themselves, if the positions were switched, would they want to speak with themselves? Try to imagine what the customer is feeling and respond accordingly.

o Using “Please”, “Thank you”, “Sir” or “Ma’am” demonstrates courtesy.

o Different situations require a different response from time to time such as sounding empathetic, sounding confident when delivering information, conveying a sense of urgency and being sincere when offering help.

o Examples: “Mr. Jones. I’ll be glad to assist.” (Typed with a confident and pleasant tone or “smile” in your words)</value>
  </data>
  <data name="Label19.ToolTip" xml:space="preserve">
    <value>Did the agent follow the guidelines for writing a professional email?

Example of professional email on confluence to include sentence structure: (https://confluence.fadv.com/display/SSW/Customer+Care+Email+Examples)

*

o Context, comprehensiveness and consistency of the doucment

o Organization, form and style of te document

o Vocabulary, usage and sentence structure of the text

o Always proofread your responses before sending to the client to ensure proper grammar, spelling and punctuation.

o Professionalism should always be forefront in the agent’s responses.

o If there are ANY spelling, grammar or punctuation errors, these points will be deducted.</value>
  </data>
  <data name="Label18.ToolTip" xml:space="preserve">
    <value>Did the agent use language that is considered easily understood by the client?

See common phrases to be replaced (https://confluence.fadv.com/display/SSW/***Common+Phrases+to+be+Replaced)

*

o The agent is expected to avoid using internal terminology, acronyms, jargon or slang that can be confusing to the caller. It is also the expectation that proper English be used, eliminating the use of slang.

* Jargon Examples: Avoid use of “PAID, DNP, EPP, FEMP, PEMP, etc.” Examples of slang: “Dude. Yep Yep. Alrighty. Cool beans.”

o Avoid Regional Terms Listed Below

* Bifurcate

* You need to take a call on this

* I will do the necessary or do the needful

* The same

* Back End Team

* Hence

* Request you do something

* Special/Relevant/Necessary/Correct/Appropriate Department/Concern Team

* Revert</value>
  </data>
  <data name="Label9.ToolTip" xml:space="preserve">
    <value>o Agent should follow all Client Fact Sheet instructions and internal tools (EA Admin / CustX) to ensure the information being provided falls within the guidelines of the customer, account guidelines and the user rights of the customer. 

The agent will then know what type of information can be provided: overall score or details. Providing too much information to a caller that doesn’t have appropriate rights will result in a deduction.</value>
  </data>
  <data name="Label8.ToolTip" xml:space="preserve">
    <value>o This section allows the Quality Assurance team to determine if additional training is required when navigating through applications and internal systems. 

Effective utilization and navigation improves our accessibility and makes the email inquiry process more efficient for the customer.</value>
  </data>
  <data name="Label7.ToolTip" xml:space="preserve">
    <value>o The agent should be able to locate and determine the information that can be provided by utilizing:

* F5, F7, F8, consideration codes, status codes.

* Drug Test, Clinic Information, Client Information and Scheduling Data using the CPScreen.net tool.

o Note that we cannot provide the following:

* Any information on internal searches that are being conducted for an NCRF.

* Specific court information

* The name of the person verifying employment/education

o Agent can confirm information but cannot provide information in regards to DOB, SSN, contact numbers provided, etc.

o Agent must avoid using the terms "we will escalate" or "I will expedite". This verbiage gives a false impression of how the process is handled.

* Instead, we can use terms like "I will follow up to have the order completed as soon as possible"

o Applicants may call in to provided Missing Information, however any other information will need to be obtained through Consumer Disclosure or the applicant may be referred to their recruiter.

* The only general information that can be given to an Applicant is the “In Process” or “Complete”..</value>
  </data>
  <data name="Label4.ToolTip" xml:space="preserve">
    <value>Did we answer all the questions asked?

Did we research the concerns and find correct solution?

Were we thorough in our response to the client/applicant?

*

o The agent should ask questions and paraphrase to be sure that the issue is understood. By confirming the answers that the caller provided it also shows engaged, active listening.

 The questions will also assist the agent in resolving the correct issue. If necessary, we must also offer to contact the client via phone if it is a complex issue, there are misunderstandings, or clarification is needed</value>
  </data>
  <metadata name="Time.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>618, 17</value>
  </metadata>
  <metadata name="BackgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>696, 17</value>
  </metadata>
  <metadata name="BackgroundWorker2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>859, 17</value>
  </metadata>
  <metadata name="SharedDictionaryStorage1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1150, 17</value>
  </metadata>
  <metadata name="BackgroundWorker3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <metadata name="BackgroundWorker4.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>180, 56</value>
  </metadata>
  <metadata name="BackgroundWorker5.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>343, 56</value>
  </metadata>
  <metadata name="BackgroundWorker6.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>506, 56</value>
  </metadata>
  <metadata name="BackgroundWorker7.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>669, 56</value>
  </metadata>
  <metadata name="Saver.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>832, 56</value>
  </metadata>
  <metadata name="Saver2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>913, 56</value>
  </metadata>
  <metadata name="ExcelSaver2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1001, 56</value>
  </metadata>
  <metadata name="ExcelSaver.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1116, 56</value>
  </metadata>
  <metadata name="BackgroundWorker8.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1224, 56</value>
  </metadata>
  <metadata name="SpellCheckLoadTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 95</value>
  </metadata>
  <metadata name="SenderEmail1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>185, 95</value>
  </metadata>
  <metadata name="EmailBackground.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>310, 95</value>
  </metadata>
  <metadata name="SenderEmail2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>456, 95</value>
  </metadata>
  <metadata name="SendEmailFin.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>581, 95</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>170</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BoHEeJ3lIF3mbaROZjlsQmZ5r
        GXmxgSgn////Af///wH///8B////Af///wH///8B////Af///wGhcBITl2MQo4tXEPuFXDn/dEQV/4BN
        E/+BTQ//mWws+YhXFqGebhYT////Af///wH///8B////Af///wGlcxIRj1wNval9NP+AThb/gFAg/4dY
        Iv+kfkr/c0MR/3tNF/98Txj/mHI9vbaLMxH///8B////Af///wH///8BpXQijZZkH/+ldRz/dEQd/4VV
        IP90QhL/eU0p/5FwWP9sRDD/f1k//04nEP+FVhWP////Af///wH///8BqngSE5JbEvONWBP/gk8T/3pQ
        OP+EW0H/cEIp/2w7Ff99TyT/oYBj/2o8Gv9GIA//b0MX9bqLGxP///8B////AZFbDFOPVQf/ajkV/4Ja
        Qv+AV0D/dUIa/557Xv9mOyX/bT4a/5ptJf9wRyv/WDEd/3BNOv+hcSBT////Af///wGwiVNnlFsV/28+
        Hf+OWRf/dEEX/3tEDv9gMhH/YD8v/7mih/+zjCv/mnA5/4pfMf9aLhf/pHMPZ////wH///8BlV4IZZth
        D/+RYCX/vJZD/5FeD/92QRX/j18k/7ilmP+ymHr/xKp3/5RnIv+LXBj/ZTgV/6t7EmX///8B////Aa18
        GjurexH/j1oJ/49WBf+PVQr/oXEx/7SNV/+efGD/sZR2/8apcf+TZR//qIZa/3NDFf+vgBo7////Af//
        /wHFlx4DsYc42ZdoJP+TXQ//uI4t/7ODE/+dZBf/fE8y/6iMd/+idjv/mWw2/35MFP+VaCzXyJsbA///
        /wH///8B////AbeJH1OzhBT5qHcU/6x/Lv+7jx7/vJNW/41hQv92STX/cD8h/3tTQf90RBf5qX4uVf//
        /wH///8B////Af///wHFlx4DvZAhb6t5EfemdRr/rHYg/5xfF/+LVCf/jFUg/4tUDP+VaTX3q3wab8ib
        GwP///8B////Af///wH///8B////Af///wG9kCFFtYchv5xnFf+XXBD/tIMf/7F9Hv+vfha/sIEiRf//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wHEmDQVv5ElNcaZJTXJnSoV////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////AW4+FgmSYxszrX0ZSYRREE2WYw9NpHMYSap6JTOreyUJ////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////AbaGGB+abCB7cUAYz3tKFd2baRPlnGoR5YZSD+WLWQ/lmWYR3Z9uHs+wgSx7tIMYH///
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Aal4HS2fbRSVn2sP74FOEv98TiX/bUAd/3RFFP+ATRP/eUYQ/3tIDv99SQz/iVYZ/7KP
        X/+UaDPrkmIZj5dnGC3///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////AcWXHgWfbhJFlmIRyZBZCv+QWAn/f00X/6+Pbf99VTf/YTQV/3xKF/+IWB//gk4N/4BM
        Df99SQv/j1wN/45cE/9+ThX/iVgUyZxrFkXFlx4F////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wHFlx4Fnm4UU4xZDteRXQ//oW8b/5JeD/9+TRn/lGo+/3lJHv9uPhT/pn5C/8Kk
        d/+Zayn/iFUO/3lGD/+EUQ7/nGkR/5JiE/+KWhP/pHcs18+wbFPFlx4F////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AaNwETmXZBDNhlEJ/buWT/+4lFf/f04a/3A+Ff96SBL/eEUR/3dE
        Ev+QYSH/sI9h/4VZJv9wQBL/XDAV/1csFP93TCn/ek8o/1kwE/9tRyX9q4hZzbWKNTn///8B////Af//
        /wH///8B////Af///wH///8B////Af///wGodREfqHYWuZRiGf+QWw3/uZA4/6JyGf93RBP/cD8Z/31L
        Ev95Rw//eUYQ/249E/9hMxj/fFU7/5h6Zv+BXEL/XDMi/5h7av+3nof/Yzwo/0YhDv9hNhT/h1YVuaJy
        Fh////8B////Af///wH///8B////Af///wH///8B////AZxnD2OneDT5nXFE/5hkE/+ldA//k2AP/28+
        Fv97TzL/mG8+/4RUIf92RBL/c0EU/3hHF/+OZTz/qY95/4NcPv9cLxj/XjMe/3dOMv9qPR3/RiAR/0ok
        D/93SBX5nGsVbf///wH///8B////Af///wH///8B////Af///wHFlx4JkVkJz51sLv+VZjX/jlkM/45Z
        CP99SQ7/bD0i/5VzXv+tjnL/d0kp/2o5Gf9nNhv/azoW/3VDEv93SiL/cEAZ/5RvUf9tOxX/bj0V/24+
        Ff9NJRP/Qx8O/180FP+RYRPZxZceCf///wH///8B////Af///wH///8B////Aad0EUGMUgX9jVQJ/4lR
        Cf+JUAT/fUcL/4BSKv92TDP/cEQt/4hhS/9lNR3/dkoz/3hPOv9bLRn/c0AU/3hFEf+VbUX/0b6q/7KW
        ff9vRCb/XTAX/0ojEf88Ggr/TSUS/4VXIv25ihtB////Af///wH///8B////Af///wH///8BkFoMiZBV
        B/+OVAX/e0YN/2U2Gf9pPSf/qYx3/7GWgv9vQiv/ZzYb/3BAIf+TbVH/wamV/4dkUv9qORb/c0ES/3I/
        FP+NYCz/mXJH/10wFf9YLx//TCQT/zwaC/9GIBD/qY94/6h7KYn///8B////Af///wH///8B////Af//
        /wGRWwu9klcI/41TCP9sOxT/XC8b/2k6Iv+OZ0j/fFE3/2Q0Hf90QBT/h1QW/4pfMf+ZemH/VCkV/1Qo
        GP9hNyf/b0Ac/6JzEv+gbxD/dkga/5Z1Xf+AWDr/Vy4d/1AmF/+AXkr/nGoavf///wH///8B////Af//
        /wH///8B////AaFyNM2hbCX/iE8N/2Y2F/9lNRf/fUcP/4ZPDv90QRn/ZTQd/3M+FP+ETAf/YjMQ/0wm
        GP9AHQ//WDQi/56FdP+0l2//u5Mi/6+EGP+PYiL/uZtz/7WWZ/9sPxv/UykX/2AzF/+fbQ/N////Af//
        /wH///8B////Af///wH///8BwKBzzZpgFP+MUQ3/cj4Y/4BQLf+fbir/mGIT/4VQD/9yPxb/bToY/4ZO
        Bv99Rwj/VSkU/103JP+Kc2b/1Me7/7+mgP+7mEL/qYAw/4xcHP+TZzL/lmgv/3E/Ev9VKhb/YjQW/6p5
        EM3///8B////Af///wH///8B////Af///wGSWwfNmV0O/5NXDv98RhX/p4Nh/9nDlf+5jyj/pHQP/4NO
        Df9rOBr/gkoL/4pRBP96TSj/wbCm/491Zv+tlHv/sJRw/7eabf+jfkn/kmYq/4VUE/+OXA//dEIT/1Qp
        Ff9wQRT/qnoQzf///wH///8B////Af///wH///8B////AZhhCcGeZQ//o2wQ/5NeDf+OWBH/tIxB/6p5
        D/+ibg3/fEcU/205G/9/ShT/j1YJ/6qGWv/azsb/t6CN/6+Tdf++por/6Ny//860av+kfTf/lWYV/6x/
        GP9/Uyf/VCkV/3tLFP+sfRTB////Af///wH///8B////Af///wH///8BpHERk6p4EP+yghL/oW8N/4pT
        Bv+QWQb/lFwH/5NYB/+FTBH/hk0T/5pqMf+qfUH/qX5F/6WHcP+hgWj/sJNy/7+miP/l1rb/0rdo/6F5
        Nf+QYRT/zLJ3/6CBZf9jNxv/f04T/6x8GpP///8B////Af///wH///8B////Af///wG9jylXsYIS/6Bv
        EP+LWAv/hk8H/4lRA/+NUwX/kVYH/5VZC/+jbRf/w6Bq/9C3lP+tgUH/lWxI/5x6X/+nh2j/rpFz/7eW
        ZP+rgkH/lmck/4RQD/+iflH/kGY5/3VDFP92QxP/tYYZV////wH///8B////Af///wH///8B////AcWX
        HguygyHlpX5K/6J5R/+GUQv/iFAF/5NcCv+odhP/tIYT/7aJFP+pdhD/pG8o/5lhF/+EVzL/gl5J/5Ry
        W//DsKD/sIxd/51sKf+UYyH/hFAO/31KDP98ShD/fk0b/5BgGOPImxsL////Af///wH///8B////Af//
        /wH///8B////AbyQJ4O2j0T7nHAx/5dkDf+TXQn/nGwk/8WkW//AmTP/uYsV/7KCFP+fZg//mFwN/3pG
        Hf9vRC7/jmlR/7ylkf+gczr/nGwr/7qcdv+QYzH/eEQO/4ZYJv+ifE37sYYugf///wH///8B////Af//
        /wH///8B////Af///wH///8BvpEiJ7GCG8mpeRP/s4QS/6p5D/+baiD/uZZi/8CYOP+5ixX/uo0c/7OD
        Mf+lbSb/hEwa/2s/Lv9pOyX/d0kv/3VCGP9/UjH/kW9e/3FGL/9jNBb/gFEh/6Z8OMm7kTAr////Af//
        /wH///8B////Af///wH///8B////Af///wHDlSkFv5MoW7qLGuW3iBP/t4gT/6VzEP+RXA7/pnQQ/7mM
        Fv/CmTH/3MWT/76Ybf+SXS3/tJyT/41pXP9rOSP/ZzUd/2QzH/9nOSb/hGBR/2c3Ff+JVhDlqHkWW72O
        GgX///8B////Af///wH///8B////Af///wH///8B////Af///wHFlx4HwJMoa7uMGuetfBH/o28N/6Bs
        DP+aZhD/sH4Z/6duE/+hZhj/kVce/3xCGf97SS//ekku/3xEFv+CSQ//gUkL/6eEYP+LZEL/o3IU566A
        F2vImxsH////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wHFlx4HwZUqZbiJ
        Gtumcw//oW0M/7yUQv+3iED/omUV/6BiFf+dXxP/klYY/6FvO/+gbC7/mF0N/5tkC/+QWQn/hVIU/5xt
        Gtu5iydl0KdUB////wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BwZUqS7uNHa+wgBXzsYQp/6x8KP+dYxD/k1YS/5tcFP+qchj/vpI9/7KBM/+mbRL/rHoQ/6Vz
        EfOrexyvt4orS////wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wHFmCkDwpUmGcGUIle9jyWvnGkR/41WCv+PVQr/omsR/7KAE/+2hxb/tYIX/7WE
        Gv+7jiKvt4cgV7uNKxnEmkMD////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wHKnz0Lw5cySb2QLWfAkh1nw5UeZ8mc
        LWfJnClJyp4uC////wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>